# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'calendar_app.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QWidget

class Ui_Form(QWidget):
    # 데이터 구조(딕셔너리)
    # ex> {'2023-06-14' : [{'time' : '12:00', 'title' : '영화', 'detail' : '글러브'},{...}],
    #        ....}
    events = {}
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(950, 712)
        self.horizontalLayout = QtWidgets.QHBoxLayout(Form)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.calendar = QtWidgets.QCalendarWidget(Form)

        self.calendar.selectionChanged.connect(self.populate_list)

        self.calendar.setObjectName("calendar")
        self.horizontalLayout.addWidget(self.calendar)
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.label = QtWidgets.QLabel(Form)
        self.label.setObjectName("label")
        self.verticalLayout.addWidget(self.label)
        self.event_list = QtWidgets.QListWidget(Form)

        self.event_list.itemSelectionChanged.connect(self.populate_form)



        self.event_list.setObjectName("event_list")
        self.verticalLayout.addWidget(self.event_list)
        self.groupBox = QtWidgets.QGroupBox(Form)
        self.groupBox.setObjectName("groupBox")
        self.gridLayout = QtWidgets.QGridLayout(self.groupBox)
        self.gridLayout.setObjectName("gridLayout")
        self.event_title = QtWidgets.QLineEdit(self.groupBox)
        self.event_title.setObjectName("event_title")
        self.gridLayout.addWidget(self.event_title, 0, 0, 1, 4)
        self.event_detail = QtWidgets.QTextEdit(self.groupBox)
        self.event_detail.setObjectName("textEdit")
        self.gridLayout.addWidget(self.event_detail, 2, 0, 1, 4)
        # Delete Button
        self.pushButton_2 = QtWidgets.QPushButton(self.groupBox)
        self.pushButton_2.setObjectName("pushButton_2")

        self.event_list.itemSelectionChanged.connect(self.check_delete_btn)
        self.check_delete_btn()

        self.pushButton_2.clicked.connect(self.delete_event)

        # self.pushButton_2.clicked.connect(self.save_event)
        self.gridLayout.addWidget(self.pushButton_2, 3, 3, 1, 1)

        # Add / Update Button
        self.pushButton = QtWidgets.QPushButton(self.groupBox)
        self.pushButton.setObjectName("pushButton")
        self.pushButton.clicked.connect(self.save_event)
        self.gridLayout.addWidget(self.pushButton, 3, 2, 1, 1)
        self.allday_check = QtWidgets.QCheckBox(self.groupBox)

        # "all day"가 체크되면 time을 비활성화 시키기
        # self.allday_check.toggled.connect(self.event_time.setDisabled)

        self.allday_check.setObjectName("allday_check")
        self.gridLayout.addWidget(self.allday_check, 1, 3, 1, 1)
        self.event_time = QtWidgets.QTimeEdit(self.groupBox)

        self.allday_check.toggled.connect(self.event_time.setDisabled)

        self.event_time.setObjectName("event_time")
        self.gridLayout.addWidget(self.event_time, 1, 2, 1, 1)
        self.event_category = QtWidgets.QComboBox(self.groupBox)

        # Add event categories
        self.event_category.addItems(
            ['Select category…', 'New…', 'Work',
             'Meeting', 'Doctor', 'Family']
        )
        # disable the first category item
        self.event_category.model().item(0).setEnabled(False)

        self.event_category.setObjectName("event_category")
        self.gridLayout.addWidget(self.event_category, 1, 0, 1, 2)
        self.verticalLayout.addWidget(self.groupBox)
        self.horizontalLayout.addLayout(self.verticalLayout)

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def clear_form(self):
        self.event_title.clear()
        self.event_category.setCurrentIndex(0)
        self.event_time.setTime(QtCore.QTime(8, 0))
        self.allday_check.setChecked(False)
        self.event_detail.setPlainText('')

    def populate_list(self):
        # As reported by github user eramey16, we need the following line
        # to unselect list items since the selected index may not exist
        # in the new list.  This line is not in the book code.
        self.event_list.setCurrentRow(-1)

        self.event_list.clear()
        self.clear_form()
        date = self.calendar.selectedDate()
        for event in self.events.get(date, []):
            time = (
                event['time'].toString('hh:mm')
                if event['time']
                else 'All Day'
            )
            self.event_list.addItem(f"{time}: {event['title']}")

    def populate_form(self):
        self.clear_form()
        date = self.calendar.selectedDate()
        event_number = self.event_list.currentRow()
        if event_number == -1:
            return

        event_data = self.events.get(date)[event_number]

        self.event_category.setCurrentText(event_data['category'])
        if event_data['time'] is None:
            self.allday_check.setChecked(True)
        else:
            self.event_time.setTime(event_data['time'])
        self.event_title.setText(event_data['title'])
        self.event_detail.setPlainText(event_data['detail'])

    def save_event(self):
        event = {
            'category' : self.event_category.currentText(),
            'time' : (
                None
                if self.allday_check.isChecked()
                else self.event_time.time()
            ),
            'title' : self.event_title.text(),
            'detail' : self.event_detail.toPlainText()
        }

        date = self.calendar.selectedDate()
        event_list = self.events.get(date, [])
        event_number = self.event_list.currentRow()

        if event_number == -1:
            event_list.append(event)
        else:
            event_list[event_number] = event

        event_list.sort(key=lambda x: x['time'] or QtCore.QTime(0, 0))
        self.events[date] = event_list

        self.populate_list()

    def delete_event(self):
        date = self.calendar.selectedDate()
        row = self.event_list.currentRow()
        del(self.events[date][row])
        self.event_list.setCurrentRow(-1)
        self.clear_form()
        self.populate_list()

    def check_delete_btn(self):
        self.pushButton_2.setDisabled(self.event_list.currentRow() == -1)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        self.label.setText(_translate("Form", "Events on Date"))
        self.groupBox.setTitle(_translate("Form", "Event"))
        self.pushButton_2.setText(_translate("Form", "Delete"))
        self.pushButton.setText(_translate("Form", "Add/Update"))
        self.allday_check.setText(_translate("Form", "All Day"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Form = QtWidgets.QWidget()
    ui = Ui_Form()
    ui.setupUi(Form)
    Form.show()
    sys.exit(app.exec())